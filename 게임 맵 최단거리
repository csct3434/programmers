def solution(maps):
    n = len(maps)
    m = len(maps[0])

    if(maps[0][0] == 0 or maps[n-1][m-1] == 0):
        return -1

    visit = [[-1 for _ in range(m)] for _ in range(n)]
    visit[0][0] = 1
    
    di = [1, 0, -1, 0]
    dj = [0, 1, 0, -1]
    queue = [[0, 0]]
    
    while(len(queue)):
        i, j = queue.pop(0)
        for x in range(4):
            ni = i+di[x]
            nj = j+dj[x]
            
            if((ni >= 0 and ni < n and nj >= 0 and nj < m) and maps[ni][nj] == 1 and visit[ni][nj] == -1):
                if(ni == n-1 and nj == m-1):
                    return visit[i][j] + 1
                else:
                    visit[ni][nj] = visit[i][j] + 1
                    queue.append([ni, nj])
    
    return -1
